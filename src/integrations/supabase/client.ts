// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://rxbnmitkcbgpkgdwlvyk.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ4Ym5taXRrY2JncGtnZHdsdnlrIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NjEyNDU0MzIsImV4cCI6MjA3NjgyMTQzMn0.WAtGI3MlW3qlCLIdEXzndUGcE9QZ0GiDxYkSj0Mrcv0";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  },
  global: {
    fetch: (...args) => {
      // Aumenta o timeout para 10 segundos e adiciona retry
      const controller = new AbortController();
      const timeoutId = setTimeout(() => controller.abort(), 10000);
      
      return fetch(args[0], { ...args[1], signal: controller.signal,
        // (duplicate signal property removed)
        // Adiciona cabeÃ§alhos para evitar cache
        headers: {
          'Cache-Control': 'no-cache, no-store, must-revalidate',
          'Pragma': 'no-cache',
          'Expires': '0'
        }
      }).then(response => {
        clearTimeout(timeoutId);
        return response;
      }).catch(error => {
        clearTimeout(timeoutId);
        console.warn('Supabase fetch error:', error);
        throw error;
      });
    }
  }
});